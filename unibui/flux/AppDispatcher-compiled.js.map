{"version":3,"sources":["AppDispatcher.js"],"names":[],"mappings":";;;;;;;;AAGA;;AACA;;;;;;+eAJA;;;;;IAMM,a;;;;;;;;;;;sCACY,O,EAAS,K,EAAO,O,EAAS;AAAA;;AAAA,gBAG5B,OAH4B,GAGC,KAHD,CAG5B,OAH4B;AAAA,gBAGnB,OAHmB,GAGC,KAHD,CAGnB,OAHmB;AAAA,gBAGV,OAHU,GAGC,KAHD,CAGV,OAHU;;AAInC,oBAAQ,IAAR,CACI;AAAA,uBAAY,OAAK,QAAL,CAAc;AACtB,0BAAM,OADgB;AAEtB,6BAAS,OAAO,MAAP,CAAc,EAAd,EAAkB,OAAlB,EAA2B,EAAC,kBAAD,EAA3B;AAFa,iBAAd,CAAZ;AAAA,aADJ,EAKI;AAAA,uBAAS,OAAK,QAAL,CAAc;AACnB,0BAAM,OADa;AAEnB,6BAAS,OAAO,MAAP,CAAc,EAAd,EAAkB,OAAlB,EAA2B,EAAC,YAAD,EAA3B;AAFU,iBAAd,CAAT;AAAA,aALJ;AAUA,iBAAK,QAAL,CAAc;AACV,sBAAM,OADI;AAEV,yBAAS,OAAO,MAAP,CAAc,EAAd,EAAkB,OAAlB;AAFC,aAAd;AAIH;;;;;;kBAGU,IAAI,aAAJ,E","file":"AppDispatcher-compiled.js","sourcesContent":["/**\n * Created by dhwani on 5/6/17.\n */\nimport {Dispatcher} from 'flux';\nimport 'babel-polyfill';\n\nclass AppDispatcher extends Dispatcher {\n    dispatchAsync(promise, types, payload) {\n\n\n        const {request, success, failure} = types;\n        promise.then(\n            response => this.dispatch({\n                type: success,\n                payload: Object.assign({}, payload, {response})\n            }),\n            error => this.dispatch({\n                type: failure,\n                payload: Object.assign({}, payload, {error})\n            })\n        );\n        this.dispatch({\n            type: request,\n            payload: Object.assign({}, payload)\n        });\n    }\n}\n\nexport default new AppDispatcher();"]}