{"version":3,"sources":["App.js"],"names":[],"mappingsfile":"App-compiled.js","sourcesContent":["// import React,{Component} from 'react'\n// import 'whatwg-fetch';\n// import {Container} from 'flux/utils';\n// import ItemActions from '../flux/actions/ItemsActions';\n// import ItemListStore from '../flux/stores/ItemListStore';\n// import InfiniteScroll from 'react-infinite-scroller';\n// import Grid from './grid.js';\n// const API_URL = 'http://localhost:3000';\n//\n// class App extends Component{\n//     constructor(props, context) {\n//         super(props, context);\n//         this.state={\n//             tracks: [],\n//             hasMoreItems: true,\n//             nextHref: null\n//         }\n//\n//     }\n//\n//     static getStores() {\n//         return [ItemListStore];\n//     }\n//\n//     static calculateState(prevState) {\n//         return {\n//             items: ItemListStore.getState()\n//         }\n//     }\n//     componentDidMount() {\n//         ItemActions.fetchItemList();\n//     }\n//     loadItems(page) {\n//         var self = this;\n//         console.log(self)\n//\n//\n//     }\n//\n// render(){\n//     return(\n//         <div className=\"main\" onScroll={this.loadItems(3)}>\n//\n//             <Grid items={this.state.items}/>\n//\n//        </div>\n//     )\n// }\n// }\n// export default Container.create(App);\n\n// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n// import InfiniteScroll from 'react-virtualized';\n// import qwest from 'qwest';\n//\n// const imageList = [];\n// const api = {\n//     baseUrl: 'https://api.soundcloud.com',\n//     client_id: 'caf73ef1e709f839664ab82bef40fa96'\n// };\n//\n// class App extends Component {\n//     constructor(props) {\n//         super(props);\n//\n//         this.state = {\n//             tracks: [],\n//             hasMoreItems: true,\n//             nextHref: null\n//         };\n//     }\n//\n//     loadItems(page) {\n//         var self = this;\n//\n//         var url = api.baseUrl + '/users/8665091/favorites';\n//         if(this.state.nextHref) {\n//             url = this.state.nextHref;\n//         }\n//\n//         qwest.get(url, {\n//             client_id: api.client_id,\n//             linked_partitioning: 1,\n//             page_size: 10\n//         }, {\n//             cache: true\n//         })\n//             .then(function(xhr, resp) {\n//                 if(resp) {\n//                     var tracks = self.state.tracks;\n//                     resp.collection.map((track) => {\n//                         if(track.artwork_url == null) {\n//                             track.artwork_url = track.user.avatar_url;\n//                         }\n//\n//                         tracks.push(track);\n//                     });\n//\n//                     if(resp.next_href) {\n//                         self.setState({\n//                             tracks: tracks,\n//                             nextHref: resp.next_href\n//                         });\n//                     } else {\n//                         self.setState({\n//                             hasMoreItems: false\n//                         });\n//                     }\n//                 }\n//             });\n//     }\n//\n//     render() {\n//         const loader = <div className=\"loader\">Loading ...</div>;\n//\n//         var items = [];\n//         this.state.tracks.map((track, i) => {\n//             items.push(\n//                 <div className=\"track\" key={i}>\n//                     <a href={track.permalink_url} target=\"_blank\">\n//                         <img src={track.artwork_url} width=\"150\" height=\"150\" />\n//                         <p className=\"title\">{track.title}</p>\n//                     </a>\n//                 </div>\n//             );\n//         });\n//\n//         return (\n//             <InfiniteScroll\n//                 pageStart={0}\n//                 loadMore={this.loadItems.bind(this)}\n//                 hasMore={this.state.hasMoreItems}\n//                 loader={loader}>\n//\n//                 <div className=\"tracks\">\n//                     {items}\n//                 </div>\n//             </InfiniteScroll>\n//         );\n//     }\n// }\n//  export default App;\n"]}